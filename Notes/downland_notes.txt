Misc 

	Memory map
		0x0000 - ram start
		0xc000 - where the cartridge lives	
		0x0400 - first graphics page
		0x1c00 - second graphics page
	
		video page memory size: 0x1800
	
	Resolution
		width: 256
		height: 192
		Colors: 2 (1 bit, 32 bytes per horizontal span)
	
		 						A/G GM2 GM1 GM0 V2/V1/V0 Desc. 		RAM used 
		Mode:  Full graphic 6-R 1 	  1   1   1  1  1  0 256x192x2  $1800(6144) 
	

Fun Facts
	
	Room Timers
	there is a timer for each room
	leave a room and its timer will increase by the amount decreased in the current room
	all room timers are updated every frame	
	
	The bouncing ball is hard coded to spawn at the same spot, no matter
	which level.
	
	there's an offscreen buffer with a clean version of the level 
	it's used for terrain collisions for the player?
	it's used to clean the screen when preparing the next frame?
	
	A running memory counter seems part of the memory protection. 
	In this version just seems to read every byte location.

Background Piece codes

	0: normal stalagtite going right
	1: single wall piece going down
	2: left hand corner piece
	3: top right hand corner piece / bottom left side of floating platforms
	4: top right hand corner piece
	5: bottom right side of floating platforms
	6: floor piece going right
	7: wall piece going up
	8: corner piece going down-left
	9: floor piece going left
	a: short line going down
	b: short line going up
	c: very short rope
	d: short rope
	e: mid-length rope
	f: long rope
	10: very long rope
	11: super long rope
	12: excessively long rope
	13: rediculously long rope
	14: horizontal rope start going right
	15: horizontal rope end going right
	16: horizontal rope going right
	17: blank area going right
	18: blank area going left, maybe
	19: blank area going down-right
	
Sprite Data Fun Facts

	some animations are copied to ram, creating four copies
	drops already have their four copies stored in rom	
	splat and doors are copied to a dedicated work buffer on demand when needed to be drawn

	
Room Pickups Fun Facts

	There are exactly five pick ups per room
	The first two are always keys, the last three are treasures
	treasures are randomly chosen

	completing the game once changes the pick up positions and keys

	
Questions

	does the game give lives at any point?

	what is the mysterious sprite data?	


	how do room transitions work?

	how does the player code flow?

		how are floor collisions detected?
		how is detecting vertical ropes done?
		how is detecting horizontal ropes done?
		how is the death fall sequence done?
	
	does the game wait for vsync on game loop?
	
	when and how are sounds handled?
	
		what sounds are there?
		
			player walk
			player treasure pick up
			screen transition
			splat sound
	
Todo

	name all the LAB_ labels
	name all the functions	
	
How To	

	how to change first room when starting game?

	How to change the game timer on start?
		change memory location cbac to 0xFFFF
		
	how to change the game timer at runtime?
		player 1 timers are located at 3e89
	
	How to limit the number of drops to 1?	
	
		For title screen, change d124 value from A (10) to 1. 
		For game rooms, change the values d12a and d12e to 0.

Keys

	there's a buffer of key states, one byte per key. Bit 0 is for player 1,
	bit 1 for player two. The bit is set when the corresponding player 
	actives the key.
		
		
		
Ball

	when hitting the ground a counter at 0x32 is set with a negative value
		every frame the value goes up until it goes positive, then decrements
		until 0 at which point it starts falling again
		
	There's a state for falling, one for jumping, and one for sticking to the ground looking squashed for a few frames. 
	There's a bit of gravity physics but jumping up has a fixed count of frames before it goes back down again.
	It has a fixed spawn position so the variation in bounce locations is probably related to some of the physics variables 
	not all being reset when getting respawned. I haven't really looked into it. It's just a guess.		
		
	Fun Facts
	
		There's a table in the code that specifies which room has the bouncing ball. 
		The table has entries past room 10 (index 9), which might suggest there were 
		more rooms at one point. The extra rooms specified in the table are 
		10, 11, 12, 13, and 14. 
